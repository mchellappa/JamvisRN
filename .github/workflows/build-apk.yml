name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: 
      - 'package.json'
      - 'App.js'
      - 'android/**'
      - '.github/workflows/build-apk.yml'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: '34.0.0'
        ndk-version: '25.1.8937393'
        
    - name: Install dependencies
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --legacy-peer-deps
        
    - name: Generate Android bundle (dev mode for compatibility)
      run: |
        # Create assets directory if it doesn't exist
        mkdir -p android/app/src/main/assets
        
        # Generate bundle in dev mode to avoid ES6 minification issues
        npx react-native bundle --platform android --dev true --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/ --reset-cache
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Gradle Wrapper
      working-directory: android
      run: |
        # Check if gradlew exists
        if [ ! -f "gradlew" ]; then
          echo "gradlew not found, generating wrapper"
          gradle wrapper
        fi
        
        # Make it executable
        chmod +x gradlew || echo "chmod failed"
        ls -la gradlew
        
        # Clean gradle cache to avoid version conflicts
        ./gradlew clean || echo "Initial clean failed"
        
    - name: Make gradlew executable and build (with full scan)
      working-directory: android
      run: |
        ls -la
        chmod +x gradlew || echo "chmod failed, trying alternative"
        
        # Configure Gradle to avoid deprecation issues and disable scan
        mkdir -p ~/.gradle
        echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties
        echo "org.gradle.configureondemand=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.caching=true" >> ~/.gradle/gradle.properties
        echo "org.gradle.warning.mode=all" >> ~/.gradle/gradle.properties
        
        if [ -f "gradlew" ]; then
          echo "=== GRADLE VERSION SCAN ==="
          ./gradlew --version
          
          echo "=== JAVA VERSION SCAN ==="
          java -version
          javac -version
          
          echo "=== ANDROID SDK SCAN ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_HOME/build-tools/ || echo "No build-tools found"
          
          echo "=== PROJECT DEPENDENCIES SCAN ==="
          ./gradlew dependencies --configuration debugCompileClasspath || echo "Dependencies scan failed"
          
          echo "=== BUILD CONFIGURATION SCAN ==="
          cat app/build.gradle | grep -A 10 -B 10 "compileSdk\|targetSdk\|minSdk" || echo "No SDK config found"
          
          echo "=== KOTLIN VERSION SCAN ==="
          cat build.gradle | grep kotlin || echo "No kotlin version found"
          
          echo "=== STARTING BUILD WITH WARNING MODE ==="
          ./gradlew clean assembleDebug --no-daemon --stacktrace --info --warning-mode all
        else
          echo "gradlew not found, using gradle command"
          gradle clean assembleDebug --no-daemon --stacktrace --info --warning-mode all
        fi
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload APK to release
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: jamvis-android-${{ github.sha }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
