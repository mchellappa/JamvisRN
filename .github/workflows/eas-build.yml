name: EAS Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths: 
      - 'package.json'
      - 'App.js'
      - 'app.json'
      - 'eas.json'
      - 'screens/**'
      - '.github/workflows/eas-build.yml'
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: EAS Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for EXPO_TOKEN
      run: |
        if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
          echo "🚨 EXPO_TOKEN secret is not set!"
          echo "Please add your Expo access token to GitHub repository secrets"
          echo "Get your token from: https://expo.dev/accounts/[username]/settings/access-tokens"
          exit 1
        else
          echo "✅ EXPO_TOKEN is configured"
        fi

    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Expo and EAS
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps
        
    - name: Initialize EAS Project
      run: |
        echo "🔧 Checking EAS project configuration..."
        
        # Check if project is already linked
        if eas project:info 2>/dev/null; then
          echo "✅ EAS project already configured"
        else
          echo "🚀 Initializing EAS project..."
          
          # First, let's see what accounts are available
          echo "📋 Available accounts:"
          eas whoami || echo "Not authenticated"
          
          # Initialize with explicit account selection (using first account: weekendwarrior)
          echo "🏗️  Creating EAS project with account 'weekendwarrior'..."
          eas init --force --non-interactive || {
            echo "⚠️  Force init failed, trying with explicit config..."
            
            # Try alternative approach - create .easrc manually
            echo '{"cli":{"appVersionSource":"local"}}' > .easrc
            
            # Try init again
            eas init --force --non-interactive
          }
        fi
        
        # Verify final configuration
        echo "📋 Final EAS project status:"
        eas project:info || echo "Project info will be available after first build"
        
    - name: EAS Build (Preview APK) 
      run: |
        echo "🚀 Starting EAS Build for Android APK..."
        
        # Build with the preview profile, letting EAS handle project setup if needed
        echo "📦 Building APK with preview profile..."
        eas build --platform android --profile preview --non-interactive --wait
        
        echo "✅ Build completed successfully!"
        
    - name: Download APK from EAS
      run: |
        echo "📥 Getting build URL from EAS..."
        # Get the latest build URL
        BUILD_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl // empty')
        
        if [ -n "$BUILD_URL" ]; then
          echo "⬇️ Downloading APK from: $BUILD_URL"
          curl -L -o jamvis-app.apk "$BUILD_URL"
          ls -la jamvis-app.apk
        else
          echo "❌ Could not get build URL"
          exit 1
        fi
      
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: jamvis-android-apk
        path: jamvis-app.apk
        retention-days: 30
        
    - name: Upload APK to Release
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: jamvis-android-${{ github.sha }}
        path: jamvis-app.apk

    - name: Build Summary
      if: always()
      run: |
        echo "## 🚀 EAS Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Platform:** Android" >> $GITHUB_STEP_SUMMARY
        echo "**Profile:** Preview (APK)" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "jamvis-app.apk" ]; then
          APK_SIZE=$(du -h jamvis-app.apk | cut -f1)
          echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Status:** Build completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status:** Build failed" >> $GITHUB_STEP_SUMMARY
        fi
